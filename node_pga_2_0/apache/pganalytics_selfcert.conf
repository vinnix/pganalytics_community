# ProxyRequests Off
ProxyPreserveHost On

LoadModule ssl_module modules/mod_ssl.so

SSLPassPhraseDialog  builtin

#Listen	443

SSLSessionCache         shmcb:/var/cache/mod_ssl/scache(512000)
SSLSessionCacheTimeout  300

#SSLMutex default
SSLRandomSeed startup file:/dev/urandom  256
SSLRandomSeed connect builtin

SSLCryptoDevice builtin
 

NameVirtualHost *:443

<VirtualHost *:443>
    ServerName localhost:443

    SSLEngine on

    SSLProxyEngine on 

    #SSLProtocol all -SSLv2
    SSLProtocol all -SSLv2 -SSLv3

    #SSLCipherSuite ALL:!ADH:!EXPORT:!SSLv2:RC4+RSA:+HIGH:+MEDIUM
    SSLCipherSuite HIGH:3DES:!aNULL:!MD5:!SEED:!IDEA

    #SSLCertificateFile /etc/httpd/ssl/ssl.crt
    #SSLCertificateKeyFile /etc/httpd/ssl/ssl.key
    #SSLCertificateChainFile /etc/httpd/ssl/sub.class1.server.ca.pem

    SSLCertificateFile /etc/pki/tls/certs/localhost.crt
    SSLCertificateKeyFile /etc/pki/tls/private/localhost.key


    # Move from / to /pga/
    RewriteEngine On
    RewriteRule ^/?$ /pga/ [R,L]

    <Location /pga>
        ProxyPass http://localhost:8081/pga retry=0 acquire=3000 timeout=1800 Keepalive=On
        ProxyPassReverse http://localhost:8081/pga
	Header edit Location ^http://(.*)$ https://$1
	SetEnv proxy-chain-auth
	#AuthType Basic
	#AuthName "pganalytics"
	#AuthUserFile /etc/httpd/passwd
	#Require user pga
    </Location>
</VirtualHost>

<VirtualHost 127.0.0.1:80>
   ServerName 127.0.0.1:80
   <Location /server-status>
       SetHandler server-status
       Order allow,deny
       Allow from 127.0.0.1 
   </Location>
</VirtualHost>

<VirtualHost *:80>
   ServerName localhost:80   
</VirtualHost>

